[{"D:\\react-ts\\train-hook\\src\\index.js":"1","D:\\react-ts\\train-hook\\src\\pages\\lazy-suspense\\index.jsx":"2","D:\\react-ts\\train-hook\\src\\pages\\hook\\context.js":"3","D:\\react-ts\\train-hook\\src\\pages\\memo\\index.jsx":"4","D:\\react-ts\\train-hook\\src\\pages\\hook\\index1.jsx":"5","D:\\react-ts\\train-hook\\src\\pages\\hook\\index2.jsx":"6","D:\\react-ts\\train-hook\\src\\pages\\create-context\\index.jsx":"7","D:\\react-ts\\train-hook\\src\\pages\\home\\index.jsx":"8","D:\\react-ts\\train-hook\\src\\pages\\about\\index.jsx":"9","D:\\react-ts\\train-hook\\src\\pages\\dashboard\\index.jsx":"10","D:\\react-ts\\train-hook\\src\\pages\\create-context\\middle.jsx":"11","D:\\react-ts\\train-hook\\src\\pages\\create-context\\context.js":"12","D:\\react-ts\\train-hook\\src\\pages\\create-context\\leaf.jsx":"13","D:\\react-ts\\train-hook\\src\\components\\test.jsx":"14","D:\\react-ts\\train-hook\\src\\pages\\redux\\index1.jsx":"15","D:\\react-ts\\train-hook\\src\\App.jsx":"16","D:\\react-ts\\train-hook\\src\\reportWebVitals.js":"17","D:\\react-ts\\train-hook\\src\\pages\\hook\\index3.jsx":"18","D:\\react-ts\\train-hook\\src\\pages\\test\\index1.jsx":"19","D:\\react-ts\\train-hook\\src\\pages\\redux\\index2.jsx":"20","D:\\react-ts\\train-hook\\src\\pages\\redux\\actions.js":"21","D:\\react-ts\\train-hook\\src\\pages\\redux\\index3.jsx":"22","D:\\react-ts\\train-hook\\src\\pages\\redux\\index4.jsx":"23","D:\\react-ts\\train-hook\\src\\pages\\redux\\index5.jsx":"24","D:\\react-ts\\train-hook\\src\\pages\\redux\\index6-async.jsx":"25","D:\\react-ts\\train-hook\\src\\pages\\test\\wrap-parent.jsx":"26","D:\\react-ts\\train-hook\\src\\pages\\use-reducer\\index.jsx":"27","D:\\react-ts\\train-hook\\src\\pages\\use-reducer\\index2.jsx":"28","D:\\react-ts\\train-hook\\src\\pages\\test\\wrap-child.jsx":"29","D:\\react-ts\\train-hook\\src\\utils\\index.js":"30","D:\\react-ts\\train-hook\\src\\pages\\create-context\\index1.jsx":"31","D:\\react-ts\\train-hook\\src\\components\\error-boundary.jsx":"32","D:\\react-ts\\train-hook\\src\\pages\\memo\\index1.jsx":"33","D:\\react-ts\\train-hook\\src\\pages\\use-reducer\\index3.jsx":"34","D:\\react-ts\\train-hook\\src\\pages\\hooks-faq\\index.jsx":"35","D:\\react-ts\\train-hook\\src\\store\\actionCreators.js":"36","D:\\react-ts\\train-hook\\src\\store\\index.js":"37"},{"size":620,"mtime":1626405427502,"results":"38","hashOfConfig":"39"},{"size":1342,"mtime":1624008260686,"results":"40","hashOfConfig":"39"},{"size":137,"mtime":1624500224218,"results":"41","hashOfConfig":"39"},{"size":1891,"mtime":1624242137912,"results":"42","hashOfConfig":"39"},{"size":5991,"mtime":1624499934889,"results":"43","hashOfConfig":"39"},{"size":2967,"mtime":1624268830108,"results":"44","hashOfConfig":"39"},{"size":1180,"mtime":1624001073145,"results":"45","hashOfConfig":"39"},{"size":152,"mtime":1610950327215,"results":"46","hashOfConfig":"39"},{"size":115,"mtime":1639831545606,"results":"47","hashOfConfig":"39"},{"size":127,"mtime":1610949468999,"results":"48","hashOfConfig":"39"},{"size":775,"mtime":1623996193795,"results":"49","hashOfConfig":"39"},{"size":379,"mtime":1623986926536,"results":"50","hashOfConfig":"39"},{"size":1347,"mtime":1639831545608,"results":"51","hashOfConfig":"39"},{"size":355,"mtime":1624005259876,"results":"52","hashOfConfig":"39"},{"size":2906,"mtime":1611728358157,"results":"53","hashOfConfig":"54"},{"size":3876,"mtime":1625550948636,"results":"55","hashOfConfig":"39"},{"size":362,"mtime":1610538060704,"results":"56","hashOfConfig":"39"},{"size":2211,"mtime":1624328716832,"results":"57","hashOfConfig":"39"},{"size":1473,"mtime":1639831545626,"results":"58","hashOfConfig":"39"},{"size":3141,"mtime":1612316762114,"results":"59","hashOfConfig":"54"},{"size":835,"mtime":1623808757443,"results":"60","hashOfConfig":"39"},{"size":3537,"mtime":1612404462413,"results":"61","hashOfConfig":"54"},{"size":5043,"mtime":1612490505284,"results":"62","hashOfConfig":"54"},{"size":5669,"mtime":1615799275140,"results":"63","hashOfConfig":"39"},{"size":4719,"mtime":1616574419283,"results":"64","hashOfConfig":"39"},{"size":376,"mtime":1623833092628,"results":"65","hashOfConfig":"39"},{"size":859,"mtime":1640223746746,"results":"66","hashOfConfig":"39"},{"size":1237,"mtime":1639831545629,"results":"67","hashOfConfig":"39"},{"size":541,"mtime":1623836049059,"results":"68","hashOfConfig":"39"},{"size":464,"mtime":1623899068449,"results":"69","hashOfConfig":"39"},{"size":1722,"mtime":1624008647538,"results":"70","hashOfConfig":"39"},{"size":532,"mtime":1624326117849,"results":"71","hashOfConfig":"39"},{"size":1601,"mtime":1624016260761,"results":"72","hashOfConfig":"39"},{"size":2352,"mtime":1624343198935,"results":"73","hashOfConfig":"39"},{"size":2950,"mtime":1639831545614,"results":"74","hashOfConfig":"39"},{"size":710,"mtime":1639831545632,"results":"75","hashOfConfig":"39"},{"size":441,"mtime":1626660463201,"results":"76","hashOfConfig":"39"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ge0xpy",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"81"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},"6gdr89",{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react-ts\\train-hook\\src\\index.js",[],"D:\\react-ts\\train-hook\\src\\pages\\lazy-suspense\\index.jsx",[],["160","161"],"D:\\react-ts\\train-hook\\src\\pages\\hook\\context.js",[],["162","163"],"D:\\react-ts\\train-hook\\src\\pages\\memo\\index.jsx",[],["164","165"],"D:\\react-ts\\train-hook\\src\\pages\\hook\\index1.jsx",["166"],"import React, {\r\n  Component,\r\n  PureComponent,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useMemo,\r\n  // memo,\r\n  useCallback,\r\n  useRef\r\n} from \"react\";\r\nimport { CountContext, ParentContext } from \"./context\";\r\n// memo用来优化函数组件的重渲染行为，当传入属性值都不变的情况下，就不会触发组件的重渲染\r\n// memo针对的是组件的渲染是否重复执行而useMemo则定义了一段函数逻辑是否重复执行，都是利用同样的算法来判定依赖是否发生改变，决定是否触发特定逻辑，仅仅用来做性能优化用\r\n// memo函数根据属性来决定是否重新渲染组件，useMemo可以根据指定的依赖来决定一段函数逻辑是否重新执行，从而优化性能\r\n// useEffect执行的是副作用，在渲染之后运行， useMemo是希望有返回值的，而返回值可直接参与渲染，因此在渲染期间完成的\r\n// ref 获取子组件或者dom元素的句柄  渲染周期之间共享数据的存储\r\n\r\nfunction Hook(props, state) {\r\n  // const [count, setCount] = useState(0);\r\n  const [count, setCount] = useState(() => {\r\n    console.log(props, state);\r\n    return 0;\r\n  });\r\n  const [clickCount, setClickCount] = useState(0);\r\n  const [size, setSize] = useState({\r\n    width: document.documentElement.clientWidth,\r\n    height: document.documentElement.clientHeight\r\n  });\r\n  const counterRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.title = `You clicked ${count} times`;\r\n    // setNum(num + 1);\r\n  }, []);\r\n\r\n  const onResize = () => {\r\n    setSize({\r\n      width: document.documentElement.clientWidth,\r\n      height: document.documentElement.clientHeight\r\n    });\r\n  };\r\n\r\n  // 关注点分离，不同的事情分开放，提高了代码复用，优化了关注点分离\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", onResize, false);\r\n\r\n    // 回调函数在视图被销毁之前触发，有两种销毁的原因，一是重渲染，二是组件卸载。useEffect每次渲染后都运行，难道要不停的绑定和解绑事件吗，不需要，给useEffect多传递一个空数组参数，就可避免\r\n    return () => {\r\n      window.removeEventListener(\"resize\", onResize);\r\n    };\r\n  }, []);\r\n  // []只有数组的每一项都不变的情况下，useEffect才不会执行\r\n\r\n  const onClick2 = (e) => {\r\n    console.log(e);\r\n  };\r\n  useEffect(() => {\r\n    document.querySelector(\"#size\").addEventListener(\"click\", onClick2, false);\r\n    return () => {\r\n      // console.log(document.querySelector(\"#size\"));\r\n      document.querySelector(\"#size\") &&\r\n        document.querySelector(\"#size\").removeEventListener(\"click\", onClick2);\r\n    };\r\n  });\r\n\r\n  const double = useMemo(() => {\r\n    return count * 2;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [count === 3]);\r\n\r\n  // 如果这样写，即使double没有变化，每次app重渲染后(onClick每次返回了新句柄)，onClick句柄的变化导致了Counter2也被连带重新渲染\r\n  // onClick就不应该经常变化了，毕竟只是一个函数而已，尽量让onClick的句柄不发生变化\r\n  /* const onClick = () => {\r\n    console.log(99);\r\n  }; */\r\n\r\n  // 用useMemo进行优化\r\n  /* const onClick = useMemo(() => {\r\n    return () => {\r\n      console.log(99);\r\n    };\r\n  }, []); */\r\n\r\n  // 用useCallback进行优化，如果useMemo返回的是一个函数，可以直接用useCallback来省略顶层的函数，useMemo的一个变体\r\n  // useMemo(() => fn) --> useCallback(fn)\r\n  // 使用useCallback不能阻止创建新的函数，但这个函数不一定会被返回，很可能创建出来就抛弃不用了，解决的是传入子组件的函数参数过度变化导致子组件过度渲染的问题\r\n  const onClick = useCallback(() => {\r\n    setClickCount((clickCount) => {\r\n      return clickCount + 1;\r\n    });\r\n    // 如果这样写的话，依赖数组里不用写clickCount了\r\n\r\n    // console.log(\"counterRef\", counterRef.current);\r\n    counterRef.current.speak();\r\n  }, [counterRef]);\r\n  const count2 = useContext(CountContext);\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={() => setCount(count + 1)}>\r\n        Click ({count})--{count2}\r\n      </button>\r\n      <br />\r\n      {count % 2 ? (\r\n        <span id=\"size\">span-Size: ({JSON.stringify(size)})</span>\r\n      ) : (\r\n        <p id=\"size\">p-Size: ({JSON.stringify(size)})</p>\r\n      )}\r\n      <ParentContext.Provider value={count + 10}>\r\n        <h3>我不是组件--{count2}</h3>\r\n        <CountContext.Provider value={count}>\r\n          <Bar />\r\n          <Counter />\r\n        </CountContext.Provider>\r\n      </ParentContext.Provider>\r\n      <p>-----------------------------------------------------------</p>\r\n      {clickCount}\r\n      <Counter2 ref={counterRef} count={double} onClick={onClick} />\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Bar extends Component {\r\n  static contextType = CountContext;\r\n\r\n  render() {\r\n    const count = this.context;\r\n    return <h3>Bar-{count}</h3>;\r\n  }\r\n}\r\n\r\nfunction Counter() {\r\n  const count = useContext(CountContext);\r\n  const parcount = useContext(ParentContext);\r\n  return (\r\n    <div>\r\n      <h3>CountContext--{count}</h3>\r\n      <h3>ParentContext--{parcount}</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\n/* function Counter2(prpos) {\r\n  console.log(\"Counter render\");\r\n  return (\r\n    <div>\r\n      <h3>{prpos.count}</h3>\r\n    </div>\r\n  );\r\n} */\r\n\r\n/* const Counter2 = memo((props) => {\r\n  console.log(\"Counter render\");\r\n  return (\r\n    <div>\r\n      <h3 style={{ color: \"red\" }} onClick={props.onClick}>\r\n        {props.count}\r\n      </h3>\r\n    </div>\r\n  );\r\n}); */\r\n\r\nclass Counter2 extends PureComponent {\r\n  speak() {\r\n    console.log(\"this.props.count\", this.props.count);\r\n  }\r\n  render() {\r\n    const { props } = this;\r\n    console.log(\"9090\");\r\n    return (\r\n      <div>\r\n        <h3 style={{ color: \"red\" }} onClick={props.onClick}>\r\n          double: {props.count}\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hook;\r\n","D:\\react-ts\\train-hook\\src\\pages\\hook\\index2.jsx",[],"D:\\react-ts\\train-hook\\src\\pages\\create-context\\index.jsx",[],"D:\\react-ts\\train-hook\\src\\pages\\home\\index.jsx",[],["167","168"],"D:\\react-ts\\train-hook\\src\\pages\\about\\index.jsx",[],"D:\\react-ts\\train-hook\\src\\pages\\dashboard\\index.jsx",[],"D:\\react-ts\\train-hook\\src\\pages\\create-context\\middle.jsx",[],"D:\\react-ts\\train-hook\\src\\pages\\create-context\\context.js",[],["169","170"],"D:\\react-ts\\train-hook\\src\\pages\\create-context\\leaf.jsx",[],"D:\\react-ts\\train-hook\\src\\components\\test.jsx",[],"D:\\react-ts\\train-hook\\src\\pages\\redux\\index1.jsx",["171"],"import React, { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nimport \"./index.css\";\r\n\r\nlet idSeq = Date.now();\r\nconst LS_KEY = \"_$-todos_\";\r\n\r\nfunction Control(props) {\r\n  const { addTodo, count, onClick } = props;\r\n  const inputRef = useRef();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newText = inputRef.current.value.trim();\r\n    if (!newText.length) {\r\n      return;\r\n    }\r\n    addTodo({\r\n      id: ++idSeq,\r\n      text: newText,\r\n      complete: false\r\n    });\r\n\r\n    inputRef.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"control\">\r\n      <h1 onClick={onClick}>todos ♬-{count}</h1>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          ref={inputRef}\r\n          className=\"new-todo\"\r\n          placeholder=\"What needs to be  done\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TodoItem(props) {\r\n  const {\r\n    todo: { id, text, complete },\r\n    toggleTodo,\r\n    removeTodo\r\n  } = props;\r\n\r\n  const onChange = () => {\r\n    toggleTodo(id);\r\n  };\r\n\r\n  const onRemove = () => {\r\n    removeTodo(id);\r\n  };\r\n\r\n  return (\r\n    <li className=\"todo-item\">\r\n      <input type=\"checkbox\" onChange={onChange} checked={complete} />\r\n      <label className={complete ? \"complete\" : \"\"}>{text}</label>\r\n      <button onClick={onRemove}>×</button>\r\n    </li>\r\n  );\r\n}\r\nfunction Todos(props) {\r\n  const { toggleTodo, removeTodo, todos } = props;\r\n  return (\r\n    <ul>\r\n      {todos.map((todo) => (\r\n        <TodoItem\r\n          className=\"todos\"\r\n          key={todo.id}\r\n          todo={todo}\r\n          toggleTodo={toggleTodo}\r\n          removeTodo={removeTodo}\r\n        ></TodoItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  const onClick = () => {\r\n    setCount(count + 1);\r\n  };\r\n\r\n  const addTodo = (todo) => {\r\n    console.log(\"addTodo\");\r\n    setTodos((todos) => [...todos, todo]);\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    console.log(\"removeTodo\");\r\n    setTodos((todos) => todos.filter((todo) => todo.id !== id));\r\n  };\r\n\r\n  const toggleTodo = (id) => {\r\n    console.log(\"toggleTodo\");\r\n    setTodos((todos) =>\r\n      todos.map((todo) =>\r\n        todo.id === id\r\n          ? {\r\n              ...todo,\r\n              complete: !todo.complete\r\n            }\r\n          : todo\r\n      )\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    const todos = JSON.parse(localStorage.getItem(LS_KEY));\r\n    setTodos(todos);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(LS_KEY, JSON.stringify(todos || \"[]\"));\r\n  }, [todos]);\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <button>{count}</button>\r\n      <Control onClick={onClick} count={count} addTodo={addTodo} />\r\n      <Todos todos={todos} removeTodo={removeTodo} toggleTodo={toggleTodo} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","D:\\react-ts\\train-hook\\src\\App.jsx",[],"D:\\react-ts\\train-hook\\src\\reportWebVitals.js",[],"D:\\react-ts\\train-hook\\src\\pages\\hook\\index3.jsx",[],"D:\\react-ts\\train-hook\\src\\pages\\test\\index1.jsx",[],"D:\\react-ts\\train-hook\\src\\pages\\redux\\index2.jsx",[],"D:\\react-ts\\train-hook\\src\\pages\\redux\\actions.js",[],"D:\\react-ts\\train-hook\\src\\pages\\redux\\index3.jsx",[],"D:\\react-ts\\train-hook\\src\\pages\\redux\\index4.jsx",[],"D:\\react-ts\\train-hook\\src\\pages\\redux\\index5.jsx",[],"D:\\react-ts\\train-hook\\src\\pages\\redux\\index6-async.jsx",[],"D:\\react-ts\\train-hook\\src\\pages\\test\\wrap-parent.jsx",[],["172","173"],"D:\\react-ts\\train-hook\\src\\pages\\use-reducer\\index.jsx",[],"D:\\react-ts\\train-hook\\src\\pages\\use-reducer\\index2.jsx",[],"D:\\react-ts\\train-hook\\src\\pages\\test\\wrap-child.jsx",[],"D:\\react-ts\\train-hook\\src\\utils\\index.js",[],"D:\\react-ts\\train-hook\\src\\pages\\create-context\\index1.jsx",[],"D:\\react-ts\\train-hook\\src\\components\\error-boundary.jsx",[],"D:\\react-ts\\train-hook\\src\\pages\\memo\\index1.jsx",["174","175"],"D:\\react-ts\\train-hook\\src\\pages\\use-reducer\\index3.jsx",["176"],"import { useState, useCallback, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n/* function Example() {\r\n  const [count, setCount] = useState(0);\r\n  const aa = useRef();\r\n  aa.current = count;\r\n\r\n  function handleAlertClick() {\r\n    setTimeout(() => {\r\n      alert(\"You clicked on: \" + aa.current);\r\n    }, 2000);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>You clicked {count} times</p>\r\n      <button onClick={() => setCount(count + 1)}>Click me</button>\r\n      <button onClick={handleAlertClick}>Show alert</button>\r\n    </div>\r\n  );\r\n} */\r\n\r\n/* function MeasureExample() {\r\n  const [height, setHeight] = useState(0);\r\n  const [height2, setHeight2] = useState(0);\r\n\r\n  const measuredRef = useCallback((node) => {\r\n    if (node !== null) {\r\n      console.log(\"node\", node.innerText);\r\n      setHeight(node.getBoundingClientRect().height);\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      <h1 ref={measuredRef}>Hello, world</h1>\r\n      <h2>The above header is {Math.round(height)}px tall</h2>\r\n      <h3 onClick={() => setHeight2(height2 + 1)}>{height2}</h3>\r\n    </>\r\n  );\r\n} */\r\n\r\n/* function MeasureExample() {\r\n  const [rect, ref] = useClientRect();\r\n  return (\r\n    <>\r\n      <h2 ref={ref}>Hello, world</h2>\r\n      {rect !== null && (\r\n        <h2>The above header is {Math.round(rect.height)}px tall</h2>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction useClientRect() {\r\n  const [rect, setRect] = useState(null);\r\n  const ref = useCallback((node) => {\r\n    if (node !== null) {\r\n      setRect(node.getBoundingClientRect());\r\n    }\r\n  }, []);\r\n  return [rect, ref];\r\n} */\r\n\r\nfunction SearchResults() {\r\n  const [data, setData] = useState({ hits: [] });\r\n  const [query, setQuery] = useState(\"react\");\r\n\r\n  useEffect(() => {\r\n    let ignore = false;\r\n\r\n    async function fetchData() {\r\n      const result = await axios(\r\n        \"https://hn.algolia.com/api/v1/search?query=\" + query\r\n      );\r\n      if (!ignore) setData(result.data);\r\n    }\r\n\r\n    fetchData();\r\n    return () => {\r\n      ignore = true;\r\n    };\r\n  }, [query]);\r\n\r\n  return (\r\n    <>\r\n      <input value={query} onChange={(e) => setQuery(e.target.value)} />\r\n      <ul>\r\n        {data.hits.map((item) => (\r\n          <li key={item.objectID}>\r\n            <a href={item.url}>{item.title}</a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchResults;\r\n","D:\\react-ts\\train-hook\\src\\pages\\hooks-faq\\index.jsx",["177","178"],"D:\\react-ts\\train-hook\\src\\store\\actionCreators.js",[],"D:\\react-ts\\train-hook\\src\\store\\index.js",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"179","replacedBy":"183"},{"ruleId":"181","replacedBy":"184"},{"ruleId":"179","replacedBy":"185"},{"ruleId":"181","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":35,"column":6,"nodeType":"189","endLine":35,"endColumn":8,"suggestions":"190"},{"ruleId":"179","replacedBy":"191"},{"ruleId":"181","replacedBy":"192"},{"ruleId":"179","replacedBy":"193"},{"ruleId":"181","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":1,"column":27,"nodeType":"197","messageId":"198","endLine":1,"endColumn":38},{"ruleId":"179","replacedBy":"199"},{"ruleId":"181","replacedBy":"200"},{"ruleId":"195","severity":1,"message":"201","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":26},{"ruleId":"195","severity":1,"message":"202","line":3,"column":7,"nodeType":"197","messageId":"198","endLine":3,"endColumn":10},{"ruleId":"195","severity":1,"message":"196","line":1,"column":20,"nodeType":"197","messageId":"198","endLine":1,"endColumn":31},{"ruleId":"195","severity":1,"message":"203","line":3,"column":10,"nodeType":"197","messageId":"198","endLine":3,"endColumn":17},{"ruleId":"195","severity":1,"message":"204","line":77,"column":10,"nodeType":"197","messageId":"198","endLine":77,"endColumn":17},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],["205"],["206"],["205"],["206"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.","ArrayExpression",["207"],["205"],["206"],["205"],["206"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar",["205"],["206"],"'Component' is defined but never used.","'Foo' is defined but never used.","'Example' is defined but never used.","'Counter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},"Update the dependencies array to be: [count]",{"range":"210","text":"211"},[1046,1048],"[count]"]